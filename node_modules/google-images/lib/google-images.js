// Generated by CoffeeScript 1.10.0
(function() {
  var fs, generateInfo, request;

  request = require('request');

  fs = require('fs');

  generateInfo = function(item) {
    var info;
    info = {
      width: item.width,
      height: item.height,
      unescapedUrl: item.unescapedUrl,
      url: item.url,
      writeTo: function(path, callback) {
        var stream;
        stream = fs.createWriteStream(path);
        stream.on('close', function() {
          return typeof callback === "function" ? callback() : void 0;
        });
        return request(item.url).pipe(stream);
      }
    };
    return info;
  };

  exports.search = function(query, options) {
    var callback;
    if (typeof query === 'object') {
      options = query;
      query = options["for"];
      if (options.callback != null) {
        callback = options.callback;
      }
    }
    if (typeof query === 'string' && typeof options === 'function') {
      callback = options;
      options = {};
    }
    if (typeof query === 'string' && typeof options === 'object') {
      if (options.callback != null) {
        callback = options.callback;
      }
    }
    if (options.page == null) {
      options.page = 0;
    }
    return request("http://ajax.googleapis.com/ajax/services/search/images?v=1.0&q=" + (encodeURIComponent(query.replace(/\s/g, '+'))) + "&start=" + options.page, function(err, res, body) {
      var data, error, error1, i, images, item, items, len;
      try {
        data = JSON.parse(body);
      } catch (error1) {
        error = error1;
        if (callback) {
          callback(false, []);
        }
        return;
      }
      if (!data.responseData || !data.responseData.results) {
        if (callback) {
          callback(false, []);
        }
        return;
      }
      items = data.responseData.results;
      images = [];
      for (i = 0, len = items.length; i < len; i++) {
        item = items[i];
        images.push(generateInfo(item));
      }
      if (callback) {
        return callback(false, images);
      }
    });
  };

}).call(this);
